/*
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CreateRouteParams;
import io.swagger.client.model.DeleteRoute;
import io.swagger.client.model.ListRoutesFull;
import io.swagger.client.model.RouteFull;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RoutesApi
 */
@Ignore
public class RoutesApiTest {

    private final RoutesApi api = new RoutesApi();

    
    /**
     * Add a new address book contact for an extension
     *
     * For more on the input fields, see Intro to Routes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRouteTest() throws ApiException {
        Integer accountId = 1315091;
        CreateRouteParams data = null;
        RouteFull response = api.createRoute(accountId, data);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAccountRouteTest() throws ApiException {
        Integer accountId = 1315091;
        Integer routeId = null;
        DeleteRoute response = api.deleteAccountRoute(accountId, routeId);

        // TODO: test validations
    }
    
    /**
     * Show details of an individual route
     *
     * This service shows the details of an individual route.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAccountRouteTest() throws ApiException {
        Integer accountId = 1315091;
        Integer routeId = null;
        RouteFull response = api.getAccountRoute(accountId, routeId);

        // TODO: test validations
    }
    
    /**
     * Get a list of routes for an account
     *
     * See Intro to Routes for more info on the properties.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAccountRoutesTest() throws ApiException {
        Integer accountId = 1315091;
        List<String> filtersId = null;
        List<String> filtersName = null;
        String sortId = null;
        String sortName = null;
        Integer limit = null;
        Integer offset = null;
        String fields = null;
        ListRoutesFull response = api.listAccountRoutes(accountId, filtersId, filtersName, sortId, sortName, limit, offset, fields);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * For more on the input fields, see Intro to Routes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAccountRouteTest() throws ApiException {
        Integer accountId = 1315091;
        Integer routeId = null;
        CreateRouteParams data = null;
        RouteFull response = api.replaceAccountRoute(accountId, routeId, data);

        // TODO: test validations
    }
    
}
